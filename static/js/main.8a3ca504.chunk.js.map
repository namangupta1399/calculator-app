{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","numOne","numTwo","operator","screenVal","initialState","handleButtonClick","item","sol","eval","setState","prevState","parseInt","console","log","this","maxWidth","path","className","type","value","readOnly","container","spacing","xs","onClick","bind","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a3ca504.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.scss\";\nimport { Button, Container, Grid } from \"@material-ui/core\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  state = {\n    numOne: 0,\n    numTwo: 0,\n    operator: \"\",\n    screenVal: \"\",\n  };\n\n  initialState = { ...this.state };\n\n  handleButtonClick = (item) => {\n    if (item === \"=\" && this.state.operator) {\n      const sol = eval(\n        `${this.state.numOne} ${this.state.operator} ${this.state.numTwo}`\n      );\n      // console.log(sol);\n      this.setState({\n        numOne: sol,\n        numTwo: 0,\n        operator: \"\",\n        screenVal: sol,\n      });\n      return;\n    }\n    switch (item) {\n      case \"/\":\n      case \"*\":\n      case \"+\":\n      case \"-\":\n        this.setState((prevState) => {\n          return {\n            ...prevState,\n            operator: item,\n            screenVal: `${prevState.screenVal}${item}`,\n          };\n        });\n        return;\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        if (this.state.operator === \"\") {\n          this.setState((prevState) => {\n            return {\n              ...prevState,\n              numOne: parseInt(prevState.numOne) * 10 + parseInt(item),\n              screenVal: `${prevState.screenVal}${item}`,\n            };\n          });\n        } else {\n          this.setState((prevState) => {\n            return {\n              ...prevState,\n              numTwo: parseInt(prevState.numTwo) * 10 + parseInt(item),\n              screenVal: `${prevState.screenVal}${item}`,\n            };\n          });\n        }\n        return;\n      default:\n        return;\n    }\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <Container maxWidth=\"sm\">\n        <BrowserRouter>\n          <Route path=\"/\">\n            <div className=\"user-input\">\n              <input\n                className=\"user-input__field\"\n                type=\"text\"\n                value={this.state.screenVal}\n                readOnly\n              />\n            </div>\n            <div className=\"button-grp\">\n              <Grid container spacing={3}>\n                <Grid item xs={9}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={() => this.setState({ ...this.initialState })}\n                  >\n                    Clear\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"/\")}\n                  >\n                    /\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"7\")}\n                  >\n                    7\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"8\")}\n                  >\n                    8\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"9\")}\n                  >\n                    9\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"*\")}\n                  >\n                    X\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"4\")}\n                  >\n                    4\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"5\")}\n                  >\n                    5\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"6\")}\n                  >\n                    6\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"-\")}\n                  >\n                    -\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"1\")}\n                  >\n                    1\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"2\")}\n                  >\n                    2\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"3\")}\n                  >\n                    3\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"+\")}\n                  >\n                    +\n                  </Button>\n                </Grid>\n                <Grid item xs={9}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"0\")}\n                  >\n                    0\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <Button\n                    className=\"button-grp__item\"\n                    onClick={this.handleButtonClick.bind(this, \"=\")}\n                  >\n                    =\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Route>\n        </BrowserRouter>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}